{"version":3,"sources":["Login.js","UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","state","setState","email","password","apiErrors","setApiErrors","useEffect","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","ok","json","data","undefined","localStorage","setItem","accessToken","refreshToken","isLogined","error","errors","message","className","initialValues","validate","values","test","onSubmit","setSubmitting","clientId","handleChange","touched","handleBlur","handleSubmit","isSubmitting","Item","label","validateStatus","help","required","type","name","onChange","onBlur","value","htmlType","disabled","UserPage","logout","setLogout","getItem","response","success","clear","userProfile","size","onClick","App","isAuth","setIsAuth","setUserProfile","spin","setSpin","isLogin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b287c944.chunk.js","sourcesContent":["import 'react-app-polyfill/ie11';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, Button, message } from 'antd';\r\n\r\nconst Login = (props) => {\r\n    const [state, setState] = useState();\r\n    const [apiErrors, setApiErrors] =useState({ email: null, password: null});\r\n\r\n    useEffect(() => {\r\n        if (state) {\r\n            const baseURL = 'https://tager.dev.ozitag.com/api/auth/user/';\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(state)\r\n            };\r\n\r\n            fetch(baseURL, requestOptions)\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        res.json()\r\n                            .then(error => {\r\n\r\n                                setApiErrors({\r\n                                    email: error.errors.email ? error.errors.email.message : undefined,\r\n                                    password: error.errors.password ? error.errors.password.message : undefined\r\n                                })\r\n                                message.error(...error.message);\r\n                            });\r\n                    }\r\n                    else {\r\n                        return res.json()\r\n                            .then(\r\n                                (data) => {\r\n                                    if (data.data !== undefined) {\r\n                                        localStorage.setItem('accessToken', data.data.accessToken);\r\n                                        localStorage.setItem('refreshToken', data.data.refreshToken);\r\n                                        props.isLogined(true)\r\n                                    }\r\n                                },\r\n                            );\r\n                    }\r\n                });\r\n        }\r\n\r\n    }, [state, props]);\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <Formik\r\n                initialValues={{ email: 'user@ozitag.com', password: 'user' }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.email) {\r\n                        errors.email = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = 'Invalid email address';\r\n                    }\r\n\r\n                    if (!values.password) {\r\n                        errors.password = 'Required';\r\n                    }\r\n                    setApiErrors({ email: null, password: null});\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    values.clientId = 1;\r\n                    setState(values)\r\n                    setSubmitting(false);\r\n                }}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Form.Item\r\n                            label=\"Email\"\r\n                            validateStatus={errors.email || apiErrors.email  ? \"error\" : \"\"}\r\n                            help={errors.email === undefined ? apiErrors.email : errors.email}\r\n                            required=\"true\"\r\n                        >\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                            />\r\n\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            validateStatus={errors.password !== undefined || apiErrors.password ? \"error\" : \"\"}\r\n                            help={errors.password === undefined ? apiErrors.password : errors.password}\r\n                            required=\"true\"\r\n                        >\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                            />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\r\n                            Submit\r\n                        </Button>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport { Spin, Space, Button } from 'antd';\r\n\r\nconst UserPage = (props) => {\r\n    const [logout, setLogout] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (logout) {\r\n            const baseURL = 'https://tager.dev.ozitag.com/api/tager/user/profile/logout/';\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\r\n                },\r\n            };\r\n\r\n            fetch(baseURL, requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        props.isLogined(false)\r\n                        localStorage.clear()\r\n                    }\r\n                }\r\n                );\r\n        }\r\n    }, [logout, props])\r\n\r\n    const logoutHandle = () => {\r\n        setLogout(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!props.userProfile ?\r\n                <Space>\r\n                    <Spin size=\"large\" />\r\n                </Space>\r\n\r\n                :\r\n                <>\r\n                    <h4>UserPage</h4>\r\n                    <p>name: {props.userProfile.name}</p>\r\n                    <p>email: {props.userProfile.email}</p>\r\n                </>\r\n            }\r\n            <Button type=\"primary\" onClick={logoutHandle} >Выйти</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport Login from './Login';\r\nimport UserPage from './UserPage';\r\nimport { Spin, Space } from 'antd';\r\n\r\nconst App = () => {\r\n  const [isAuth, setIsAuth] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(false)\r\n  const [spin, setSpin] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (isAuth === null || !userProfile) {\r\n      if (localStorage.getItem('accessToken')) {\r\n        setSpin(true)\r\n        const baseURL = 'https://tager.dev.ozitag.com/api/tager/user/profile/';\r\n        const requestOptions = {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\r\n          },\r\n        };\r\n\r\n        fetch(baseURL, requestOptions)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setUserProfile(data.data)\r\n            setIsAuth(true)\r\n            setSpin(false)\r\n          }\r\n          );\r\n      }\r\n    }\r\n  }, [isAuth])\r\n\r\n  const isLogined = (isLogin) => {\r\n    setIsAuth(isLogin)\r\n  }\r\n  if (spin) {\r\n    return (\r\n        <Spin size=\"large\" />\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      {!isAuth ?\r\n        <Login isLogined={isLogined} />\r\n        :\r\n        <UserPage isLogined={isLogined} userProfile={userProfile} />\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}